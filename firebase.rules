rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isPartner() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'partner';
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Results collection
    match /results/{resultId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAdmin();
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if true;
      allow update: if isAuthenticated();
      allow delete: if isAdmin();
    }

    // Coaches collection
    match /coaches/{coachId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (isAdmin() || isPartner());
    }

    // Assessment codes collection
    match /assessment_codes/{codeId} {
      allow read: if true;  // Allows verification without authentication
      allow write: if isAuthenticated() && (isAdmin() || isPartner());
    }

    // Respondents collection
    match /respondents/{respondentId} {
      allow read: if isAuthenticated();
      allow create: if true;
      allow update: if isAuthenticated();
      allow delete: if isAdmin();
    }

    // User agreements collection
    match /user_agreements/{agreementId} {
      allow read: if isAuthenticated();
      allow create: if true;
      allow update: if isAuthenticated();
      allow delete: if isAdmin();
    }

    // Admins collection
    match /admins/{adminId} {
      allow read: if isAuthenticated() && isAdmin();
      allow write: if isAuthenticated() && isAdmin();
    }

    // Partners collection
    match /partners/{partnerId} {
      allow read: if isAuthenticated() && (isAdmin() || isOwner(partnerId));
      allow write: if isAuthenticated() && isAdmin();
    }

    // Default deny all other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}